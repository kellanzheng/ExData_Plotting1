q3join<-merge(q3a,q3b1,by.x="Code",by.y="CountryCode")
q3join$Code
q3a
head(q3a)
filter(q3a, is.na(GDP))
filter(q3a, !is.na(GDP))
q3a1 <- filter(q3a, !is.na(GDP))
q3join<-merge(q3a1,q3b1,by.x="Code",by.y="CountryCode")
head(q3join)
q3join$Code
arrange(q3join,GDP)
tapply(q3join$GDP,q3join$Income.Group,mean)
tapply(q3join$GDP,q3join$Income.Group,mean, rm.na = TRUE)
names(q3join()
names(q3join)
seq(along=q3join$GDP)
arrange(q3join,desc(GDP))
q3join <- arrange(q3join,desc(GDP))
head(q3join)
head(q3join$Code)
mutate(q3join,rank = seq(along = GDP))
q3join <- mutate(q3join,rank = seq(along = GDP))
q3join$rank
tapply(q3join$rank,q3join$Income.Group,mean, rm.na = TRUE)
q3join$rankGroups = cut(q3join$rank, breaks=quantile(q3join$rank,c(0.2,0.4,0.6,0.8,1)))
q3join$rankGroups
install.packages("Hmisc")
library(Hmisc)
cut2(q3join$rank, g = 5)
q3join$rankGroups <- cut2(q3join$rank, g = 5)
q3join$rankGroups
table(q3join$rankGroups, useNA = "ifany")
xtabs(frequency ~ q3join$rankGroups + q3join$Income.Group, data = q3join)
q3join %>% filter(rankGroups == "[ 1, 39)")
filter(q3join, rankGroups == "[ 1, 39)")
filter(select(q3join, Code, Name, GDP, Income.Group), rankGroups == "[ 1, 39)")
filter(select(q3join, Code, Name, GDP, Income.Group, rankGroups), rankGroups == "[ 1, 39)")
head(filter(q3join, rankGroups == "[ 1, 39)"))
q3join1 <- select(q3join,Code,Name, Income.Group, rankGroups)
head(q3join1)
q3join1 %>% filter(rankGroups = "[  1, 39)")
q3join1 %>% filter(rankGroups == "[  1, 39)")
q3join1 %>% filter(rankGroups == "[  1, 39)") %>% filter(Income.Group == "Lower middle income")
q3join
q3join
q3join1
q3join1$Code
q3join1
q3join$GDP
q3a$GDP
na.rm(q3a$GDP)
filter(q3a, !is.na(GDP))
q3a$X.1
q3a$X.1 <- as.numeric(q3a$X.1)
q3a$X.1
q3a1 <- filter(q3a, !is.na(GDP))
q3a1
remove(q3a1)
q3a
q3join1
head(q3join1)
head(q3join1,14)
tail(q3join1, 14)
q2 <- readJPEG("jeff.jpg")
q2 <- readJPEG("jeff.jpg",native = TRUE)
quantile(q2,c(0.3,0.8))
read.table("test/X_test.txt",nrows = 10)
read.table("UCI HAR Dataset/test/X_test.txt",nrows = 10)
test_set <- read.table("UCI HAR Dataset/test/X_test.txt",nrows = 10)
names(test_set)
train_set <- read.table("UCI HAR Dataset/train/X_test.txt",nrows = 10)
train_set <- read.table("UCI HAR Dataset/train/X_train.txt",nrows = 10)
names(train_Set)
names(train_set)
str(tr)
train_set
str(train_set)
head(str(train_set))
str(test)
str(test_)
str(test_set)
head(test_set)
str(test_set)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
run_analysis
source('~/Coursera/data_science/gettingdata/run_analysis.R')
nroww(read.table("UCI HAR Dataset/test/X_test.txt"))
nrow(read.table("UCI HAR Dataset/test/X_test.txt"))
nrow(read.table("UCI HAR Dataset/train/X_train.txt")
)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(names)
grep(names)
grep("std",names$V2)
filter(names, "std" %in% V2)
grep1("std",names$V2)
grep1("std",names$V2)
?grepl
grep1(std,names$V2)
base.grep1(std,names$V2)
library(base)
base.grep1(std,names$V2)
grep1(std,names$V2)
grepl("std",names$V2)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
grepl("std",names$V2)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(names_filtered)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(combined_set)
View(names_filtered)
names_filtered[1]
names_filtered[[1]]
combined_set[names_filtered[[1]]]
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(test_set)
View(names)
View(names_filtered)
View(test_set)
View(combined_set)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(test_activity)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(activity_names)
View(combined_activity)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
names(combined_set)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
names_filtered[[3]]
names_filtered$3
names_filtered[,3]
names_filtered
names_filtered[2][3]
names_filtered[[2]][3]
names_filtered[[2]][[3]]
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(combined_set)
View(activity_labels)
View(activity_names)
View(activity_labels)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(combined_activity)
View(combined_set)
View(combined_activity)
View(combined_set)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(combined_activity)
View(combined_activity)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(combined_activity)
View(activity_labels)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(combined_set1)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(combined_set1)
combinedSet1$activityNameIndex
combined_set1$activityNameIndex
activity_labels[,2]
activity_labels$V2
merge(combined_set1, activity_labels, by.x = combined_set1$activityNameIndex, by.y = activity_labels$V2)
intersect(names(activity_labels),names(combined_set1))
merge(combined_set1, activity_labels)
merge(combined_set1, activity_labels, by.x = combined_set1$activityNameIndex, by.y = activity_labels$V1)
merge(combined_set1, activity_labels, by.x = combined_set1$activityNameIndex, by.y = activity_labels$V1)
merge(activity_labels, combined_set1, by.x = activity_labels$V1, by.y = combined_set1.$activityNameIndex)
str(activity_labels)
str(combined_set1)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
d
View(combined_set1)
View(combined_activity)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
?replace
replace(combined_activity,activity_labels[[1]],activity_labels[[2]])
View(combined_activity)
View(combined_activity)
replace(combined_activity[[1]],activity_labels[[1]],activity_labels[[2]])
activity_labels[[2]]
View(combined_activity)
View(activity_labels)
merge(combined_activity,activity_labels,by.x = "activityNameIndex", by.y = "V1", all.x = TRUE)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(combined_set1)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(combined_set2)
View(combined_set1)
View(combined_set2)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(combined_set2)
View(names_filtered)
View(combined_set1)
View(combined_set)
View(names_filtered)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(subject)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(`X3`)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(X)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(X)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
ftable(X)
split(X,f = subject)
summarize(X)
summarize(X,mean)
summarize(X,mean())
str(split(X))
str(split(X,f = subject)
)
sapply(split(X,f = subject),mean)
sapply(split(X,subject), mean)
apply(split(X,subject), mean)
split(X,subject)
lapply(split(X,subject),mean)
?dcast
library(reshape2)
?dcast
dcast(X, subject ~ activityName ~ variable)
dcast(X, subject ~ variable)
dcast(X, subject ~ variable, mean)
dcast(X, subject ~ activityName)
summarise(X)
summarise(X,subject)
group_by(X,subject)
summarize(group_by(X,subject),mean)
summarize(group_by(X,subject))
summarize(group_by(X,subject,activityName))
summarize(group_by(X,subject,activityName),...)
summarize(group_by(X,subject,activityName),mean())
summarize(group_by(X,subject,activityName),mean = mean(fBodyGyro-meanFreq()-X)
)
View(X)
summarise(group_by(X, subject, activityName), mean = mean(tBodyAcc-std()-X))
group_by(X, subject, activityName)
str(group_by(X, subject, activityName))
dcast(X,subject ~ variable,mean)
library("reshape2", lib.loc="C:/Program Files/R/R-3.1.2/library")
library(reshape2)
dcast(X, subject~variable,mean)
?dcast
names(airquality) <- tolower(names(airquality))
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
acast(aqm, day ~ month ~ variable)
dcast(aqm, day ~ month ~ variable)
dcast(aqm, day ~ ~ variable)
dcast(aqm, day ~ variable)
aqm
dcast(X, subject ~ variable, mean)
melt(X, id=c("subject","activityName"),measure.vars=names(select(X,-(subject,activityName))))
melt(X, id=c("subject","activityName"),measure.vars=names(select(X,-(subject,activityName))))
melt(X, id=c("subject","activityName"),measure.vars=names(select(X,-(subject,activityName))))
melt(data =  X , id.vars = c("subject","activityName"))
melt(X, id=c("subject","activityName"))
Xmelt <- melt(data =  X , id.vars = c("subject","activityName"))
head(Xmelt)
dcast(Xmelt, subject ~ activityName ~ variable, mean)
dcast(Xmelt, subject ~ variable, mean)
dcast(Xmelt, subject + activityName ~ variable, mean)
dcast(Xmelt, subject + activityName + variable ~ value, mean)
dcast(Xmelt, subject + activityName ~ variable, mean)
dcast(Xmelt, subject ~ variable, mean)
dcast(Xmelt, subject + activityName ~ variable, mean)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(Xsummary)
write.table(Xsummary,file = "test.txt",row.names = FALSE)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(Xsummary)
View(Xmelt)
View(Xsummary)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(Xsummary)
source('~/Coursera/data_science/gettingdata/run_analysis_small.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(Xsummary)
View(subject)
remove("test.txt")
delete("test.txt")
source('~/Coursera/data_science/gettingdata/run_analysis.R')
View(Xsummary)
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
X <- rbind(X_test, X_train)
names <- read.table("UCI HAR Dataset/features.txt")
names_filtered <- filter(names,grepl("std",V2) | grepl("mean",V2) | grepl("Mean",V2))
X <- X[names_filtered[[1]]]
names(X) <- names_filtered[[2]]
names(X)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
activity_labels <- rename(activity_labels, activityIndex = V1, activityName = V2)
View(activity_labels)
Y_test <- read.table("UCI HAR Dataset/test/Y_test.txt")
Y_train <- read.table("UCI HAR Dataset/train/Y_train.txt")
Y <- rbind(Y_test, Y_train)
Y <- rename(Y, activityIndex = V1)
View(Y)
X <- cbind(X, Y)
X <- merge(X,activity_labels,by.x = "activityIndex", all.x = TRUE)
write.table(X,"X.txt",row.names = FALSE)
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
# Merge the training and test raw data sets to create one combined raw data set.
X <- rbind(X_test, X_train)
# Open the index of variable names (features.txt)
# We are only interested in the mean and standard deviations. Thus, we will
# filter only for the names of variables that contain "std" or "mean" within
# the list of names.
names <- read.table("UCI HAR Dataset/features.txt")
names_filtered <- filter(names,grepl("std",V2) | grepl("mean",V2) | grepl("Mean",V2))
# Subset the combined raw data to obtain only columns with "std" or "mean" in their
# variable names, using the index of the filtered names list.
X <- X[names_filtered[[1]]]
# Because the columns of the new data set correspond to the filtered names list,
# we can replace the names of this dataframe with the filtered names list.
names(X) <- names_filtered[[2]]
# Naming the activities with detailed labels
# Load the activity_labels file into R
# Rename the indices to be more detailed
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
activity_labels <- rename(activity_labels, activityIndex = V1, activityName = V2)
# Load both the training and test Y files into R.
# Merge the Y sets with rbind in the same manner as the actual data set.
# Rename this column of data to "activityName"
Y_test <- read.table("UCI HAR Dataset/test/Y_test.txt")
Y_train <- read.table("UCI HAR Dataset/train/Y_train.txt")
Y <- rbind(Y_test, Y_train)
Y <- rename(Y, activityIndex = V1)
''
X <- cbind(X, Y)
X1 <- merge(X,activity_labels,by = "activityIndex", all.x = TRUE)
write.table(X1, "X1.txt", row.names = FALSE)
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
source('~/Coursera/data_science/gettingdata/run_analysis.R')
Xmelt
head(Xmelt)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, "quiz4_1.csv")
quiz1 <- read.csv("quiz4_1.csv")
names(quiz1)
split1 <- strsplit(names(quiz1),"wgtp")
split1
split1[123]
split1
split1[[123]]
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl2, "quiz4_2.csv")
quiz2 <- read.csv("quiz4_2.csv")
names(quiz2)
quiz2
head(quiz2)
quiz2 <- read.csv("quiz4_2.csv",skip=4)
head(quiz2)
tail(quiz4)
tail(quiz2)
quiz2$X.4
quiz2$X.4 <- gsub(",","",quiz2$X.4)
head(quiz2)
View(quiz2)
quiz2[1:190]
quiz2[1,190]
quiz2 <- read.csv("quiz4_2.csv",skip=4,nrow = 190)
head(quiz2)
tail(quiz2)
quiz2$X.4 <- gsub(",","",quiz2$X.4)
mean(quiz2$X.4)
mean(as.numeric(quiz2$X.4))
grep("^United",quiz2$X.3)
fileUrl3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl3, "quiz4_4.csv")
quiz4 <- read.csv("quiz4_4.csv")
quiz4
names(quiz4)
head(quiz4)
View(quiz4)
join <- merge(quiz4, quiz2, by.x = quiz4$CountryCode, by.y = quiz2$X1)
quiz4$CountryCode
join <- merge(quiz4, quiz2, by.x = quiz4$CountryCode, by.y = quiz2$X1)
join <- merge(quiz4, quiz2, by.x = quiz4$CountryCode, by.y = quiz2$X.1)
join <- merge(quiz4, quiz2, by.x = "CountryCode", by.y = "X.1")
join
remove(join)
join <- merge(quiz4, quiz2, by.x = "CountryCode", by.y = "X.1", all=TRUE)
join
View(join)
remove(join)
quiz2$X.1
quiz2
names(quiz2)
View(quiz2)
join <- merge(quiz4, quiz2, by.x = "CountryCode", by.y = "X", all=TRUE)
join
View(join)
names(quiz4)
names(quiz2)
head(quiz2)
grep("Fiscal",join$Special.Notes)
grep("Fiscal",join$Special.Notes, value  = TRUE)
grep("Fiscal year end: June",join$Special.Notes, value  = TRUE)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
grep("2012", sampleTimes)
count(grep("2012", sampleTimes))
length(grep("2012", sampleTimes))
str(sampleTimes)
weekdays(sampleTimes)
grep("2012", sampleTimes, value = TRUE)
weekdays(grep("2012", sampleTimes, value = TRUE))
sampleTimes[grepl("2012", sampleTimes, value]
sampleTimes[grepl("2012", sampleTimes, value)]
grepl("2012", sampleTimes, value)
grepl("2012", sampleTimes)
sampleTimes[grepl("2012", sampleTimes)]
sample2012 <- sampleTimes[grepl("2012", sampleTimes)]
weekdays(sample2012)
grep("Monday",sample2012)
grep("Monday",weekdays(sample2012))
length(grep("Monday",weekdays(sample2012)))
a<- read.file("student1.txt")
a<- read.table("student1.txt")
View(a)
a<- read.table("student1.txt",header = TRUE)
View(a)
a<- read.table("student2.txt",header = TRUE)
view(b)
View(a)
a<- read.table("student3.txt",header = TRUE)
View(a)
a<- read.table("student4.txt",header = TRUE)
View(a)
library(datasets)
hist(airquality$Ozone)
hist(airquality$Ozone)
colors()
?par
par()
par("lty")
with(airquality, plot(Wind,Ozone))
example(points)
setwd("~/Coursera/data_science/exploratory_data/")
data <- read.csv("household_power_consumption.txt", sep = ";", na.strings = "?")
data$DateRight <- as.Date(data$Date, format = "%d/%m/%Y")
data$TimeRight <- strptime(paste(data$Date, data$Time, sep = " "),"%d/%m/%Y %H:%M:%S")
dataSubset <- subset(data,data$DateRight == as.Date("2007-02-01") | data$DateRight == as.Date("2007-02-02"))
setwd("~/Coursera/data_science/exploratory_data/ExData_Plotting1")
setwd("~/Coursera/data_science/exploratory_data/ExData_Plotting1")
png(filename = "plot1.png")
hist(dataSubset$Global_active_power, col= "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
dev.off()
png(filename = "plot2.png")
plot(dataSubset$TimeRight,dataSubset$Global_active_power,type = "n", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(dataSubset$TimeRight,dataSubset$Global_active_power)
dev.off()
png(filename = "plot3.png")
plot(dataSubset$TimeRight,dataSubset$Sub_metering_1,type = "n", ylab = "Energy sub metering", xlab = "")
lines(dataSubset$TimeRight,dataSubset$Sub_metering_1)
lines(dataSubset$TimeRight,dataSubset$Sub_metering_2, col = "red")
lines(dataSubset$TimeRight,dataSubset$Sub_metering_3, col = "blue")
legend("topright",lwd=1,col = c("black","red","blue"),legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3")
dev.off()
png(filename = "plot3.png")
plot(dataSubset$TimeRight,dataSubset$Sub_metering_1,type = "n", ylab = "Energy sub metering", xlab = "")
lines(dataSubset$TimeRight,dataSubset$Sub_metering_1)
lines(dataSubset$TimeRight,dataSubset$Sub_metering_2, col = "red")
lines(dataSubset$TimeRight,dataSubset$Sub_metering_3, col = "blue")
legend("topright",lwd=1,col = c("black","red","blue"),legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
png(filename = "plot4.png")
par(mfrow=c(2,2))
#4A
plot(dataSubset$TimeRight,dataSubset$Global_active_power,type = "n", ylab = "Global Active Power", xlab = "")
lines(dataSubset$TimeRight,dataSubset$Global_active_power)
#4B
plot(dataSubset$TimeRight,dataSubset$Voltage,type = "n", ylab = "Voltage", xlab = "datetime")
lines(dataSubset$TimeRight,dataSubset$Voltage, ylab = "Voltage")
#4C
plot(dataSubset$TimeRight,dataSubset$Sub_metering_1,type = "n", ylab = "Energy sub metering", xlab = "")
lines(dataSubset$TimeRight,dataSubset$Sub_metering_1)
lines(dataSubset$TimeRight,dataSubset$Sub_metering_2, col = "red")
lines(dataSubset$TimeRight,dataSubset$Sub_metering_3, col = "blue")
legend("topright",lwd=1,col = c("black","red","blue"),legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),bty="n")
#4D
plot(dataSubset$TimeRight,dataSubset$Global_reactive_power,type = "n", ylab = "Global_reactive_power", xlab = "datetime")
lines(dataSubset$TimeRight,dataSubset$Global_reactive_power, ylab = "Voltage", lwd=0.5)
dev.off()
